server:
  port: 9000
spring:
  application:
    name: service-hi
  datasource:
    name: druidDataSource
    type: com.alibaba.druid.pool.DruidDataSource
#    kafka配置
#  kafka:
#   bootstrap-servers: ip
##
#   consumer:
#      auto-offset-reset: latest
#      group-id: rds-test-log
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      enable-auto-commit: true
#      max-poll-records: 1000
#      auto-commit-interval: 20
#      fetch-max-wait: 500
#      fetch-min-size: 5
#      heartbeat-interval: 2000
#  producer:
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.apache.kafka.common.serialization.StringSerializer
#      acks: 1
#  listener:
#         concurrency: 9








#  fdfs.pool.max-wait-millis = 100
#  fdfs.pool.jmx-name-base = 1
#  fdfs.pool.jmx-name-prefix = 1
fdfs:
  so-timeout: 90000
  connect-timeout: 90000
  tracker-list:
     - 103.40.232.189:22122
     - 103.40.232.190:22122
  pool:
    max-wait-millis: -1
    jmx-name-base: 1
    jmx-name-prefix: 1
    max-total: 1000
#eureka.instace.hostname=127.0.0.1
##注册中心不需要注册自己
#eureka
#  client
#   register-with-eureka:false
#eureka.client.fetch-registry=false
#eureka.client.serviceUrl.defaultZone=http://127.0.0.1:1111/eureka/
#pool.max-total = 200
eureka:
  instance:
    hostname: 127.0.0.1
  client:
    register-with-eureka: true
    fetch-registry: false
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka
    #register-with-eureka: true

